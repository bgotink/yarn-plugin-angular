diff --git a/ngcc/src/dependencies/module_resolver.js b/ngcc/src/dependencies/module_resolver.js
semver exclusivity ^10 || >= 11.0.0 < 11.0.9
--- a/ngcc/src/dependencies/module_resolver.js
+++ b/ngcc/src/dependencies/module_resolver.js
@@ -133,18 +133,20 @@
          */
         ModuleResolver.prototype.resolveAsEntryPoint = function (moduleName, fromPath) {
             var folder = fromPath;
-            while (!file_system_1.isRoot(folder)) {
-                folder = file_system_1.dirname(folder);
-                if (folder.endsWith('node_modules')) {
-                    // Skip up if the folder already ends in node_modules
-                    folder = file_system_1.dirname(folder);
+            try {
+                const result = require.resolve(`${moduleName}/package.json`, {paths: [file_system_1.join(folder, '__synthetic__.js')]});
+                return new ResolvedExternalModule(file_system_1.dirname(result));
+            } catch (e) {
+                if (e.code !== 'MODULE_NOT_FOUND') {
+                    throw e;
                 }
-                var modulePath = file_system_1.resolve(folder, 'node_modules', moduleName);
-                if (this.isEntryPoint(modulePath)) {
-                    return new ResolvedExternalModule(modulePath);
-                }
-                else if (this.resolveAsRelativePath(modulePath, fromPath)) {
-                    return new ResolvedDeepImport(modulePath);
+            }
+            try {
+                const result = require.resolve(`${moduleName}/`, {paths: [file_system_1.join(folder, '__synthetic__.js')]});
+                return new ResolvedDeepImport(file_system_1.dirname(result));
+            } catch (e) {
+                if (e.code !== 'MODULE_NOT_FOUND') {
+                    throw e;
                 }
             }
             return null;
diff --git a/ngcc/src/dependencies/module_resolver.js b/ngcc/src/dependencies/module_resolver.js
semver exclusivity ^11.0.9
--- a/ngcc/src/dependencies/module_resolver.js
+++ b/ngcc/src/dependencies/module_resolver.js
@@ -123,18 +123,20 @@
          */
         ModuleResolver.prototype.resolveAsEntryPoint = function (moduleName, fromPath) {
             var folder = fromPath;
-            while (!this.fs.isRoot(folder)) {
-                folder = this.fs.dirname(folder);
-                if (folder.endsWith('node_modules')) {
-                    // Skip up if the folder already ends in node_modules
-                    folder = this.fs.dirname(folder);
+            try {
+                const result = require.resolve(`${moduleName}/package.json`, {paths: [file_system_1.join(folder, '__synthetic__.js')]});
+                return new ResolvedExternalModule(file_system_1.dirname(result));
+            } catch (e) {
+                if (e.code !== 'MODULE_NOT_FOUND') {
+                    throw e;
                 }
-                var modulePath = this.fs.resolve(folder, 'node_modules', moduleName);
-                if (this.isEntryPoint(modulePath)) {
-                    return new ResolvedExternalModule(modulePath);
-                }
-                else if (this.resolveAsRelativePath(modulePath, fromPath)) {
-                    return new ResolvedDeepImport(modulePath);
+            }
+            try {
+                const result = require.resolve(`${moduleName}/`, {paths: [file_system_1.join(folder, '__synthetic__.js')]});
+                return new ResolvedDeepImport(file_system_1.dirname(result));
+            } catch (e) {
+                if (e.code !== 'MODULE_NOT_FOUND') {
+                    throw e;
                 }
             }
             return null;
diff --git a/ngcc/src/entry_point_finder/entry_point_collector.js b/ngcc/src/entry_point_finder/entry_point_collector.js
semver exclusivity ^11
--- a/ngcc/src/entry_point_finder/entry_point_collector.js
+++ b/ngcc/src/entry_point_finder/entry_point_collector.js
@@ -57,6 +57,7 @@
                 }
                 return entryPoints;
             }
+            if (!this.fs.exists(sourceDirectory)) return entryPoints;
             try {
                 // The `sourceDirectory` was not a package (i.e. there was no package.json)
                 // So search its sub-directories for Angular packages and entry-points
